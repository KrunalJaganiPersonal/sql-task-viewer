[
  {
    "id": 1,
    "task": "Update Main Client's Name",
    "select": [
      "DECLARE @AccountNo VARCHAR(30) = 'AU300424-TFZ'", 
      "DECLARE @ClientId BIGINT = 0",
      "SELECT @ClientId = ClientId FROM Client WHERE AccountNo = @AccountNo",
      "SELECT * FROM Client WHERE ClientId = @ClientId",
      "SELECT * FROM ClientAccUser WHERE ClientId = @ClientId",
      "SELECT * FROM UserMaster WHERE ClientId = @ClientId",
      "SELECT * FROM Clientaboutus WHERE ClientId = @ClientId",
      "SELECT * FROM ClientDirector WHERE ClientId = @ClientId",
      "SELECT * FROM ClientOwnership WHERE ClientId = @ClientId"
    ],
    "update": [
      "DECLARE @ClientId BIGINT = 241638",
      "DECLARE @UserId BIGINT = 273394",
      "DECLARE @FirstName NVARCHAR(100) = 'Vladimir'",
      "DECLARE @MiddleName NVARCHAR(100) = NULL",
      "DECLARE @LastName NVARCHAR(100) = 'Arteyev'",
      "DECLARE @ClientTypeId INT = 0",
      "SELECT @ClientTypeId = ClientTypeId FROM Client WHERE ClientId = @ClientId",
      "UPDATE Client SET ContactFirstName = @FirstName, ContactMiddleName = @MiddleName, ContactLastName = @LastName WHERE ClientId = @ClientId",
      "UPDATE ClientAccUser SET FirstName = @FirstName, MiddleName = @MiddleName, LastName = @LastName WHERE ClientId = @ClientId AND UserId = @UserId",
      "UPDATE UserMaster SET FirstName = @FirstName, MiddleName = @MiddleName, LastNmae = @LastName WHERE ClientId = @ClientId AND UserId = @UserId",
      "UPDATE Clientaboutus SET FirstName = @FirstName, MiddleName = @MiddleName, LastName = @LastName WHERE ClientId = @ClientId",
      "IF @ClientTypeId = 2",
      "BEGIN",
      "    UPDATE ClientDirector SET FirstName = @FirstName, MiddleName = @MiddleName, LastName = @LastName WHERE ClientId = @ClientId",
      "    UPDATE ClientOwnership SET FirstName = @FirstName, MiddleName = @MiddleName, LastName = @LastName WHERE ClientId = @ClientId",
      "END"
    ]
  },
  {
    "id": 2,
    "task": "depo, VM, MC Change",
    "select": [
      "DECLARE @ConversionCode VARCHAR(50) = 'FW300322-QZMOZ'",
      "SELECT Deposit_amount, Deposit_currency, Deposit_percentage, VariationMargin, MarginCall, Deposit_status, * FROM Conversion WHERE ConversionCode = @ConversionCode",
      "SELECT * FROM TransactionHistory WHERE TransactionId = 28670"
    ],
    "update": [
      "EXEC [dbo].[USP_Conversion_UpdateConversionDepoVcMc] @ConversionCode = 'FW170725-ZOPZZ', @DepositPercentage = 0,  @VariationMargin = 3,  @MarginCall = 3;"
    ]
  },
  {
    "id": 3,
    "task": "If Conversion Status is  then Update provider ref number on FW280425-VTWZV-C to 664840471",
    "select": [
      "DECLARE @ConversionCode VARCHAR(50) = 'FW300322-QZMOZ-A'",
      "SELECT * FROM Conversion WHERE ConversionCode = @ConversionCode"
    ],
    "update": [
      "UPDATE Conversion SET IFX_Trade_ReferenceNo = '664840471' WHERE Conversion_id = 28670"
    ]
  },
  {
    "id": 4,
    "task": "Please set up payment of 1,00,000.00 PHP to 'Krunal PHP'",
    "select": [
      "DECLARE @ClientId BIGINT = 210758, @AccountNo VARCHAR(50) = 'CA251124-QCC', @Currency VARCHAR(10) = 'PHP', @BeneficiaryName VARCHAR(50) = 'Krunal PHP'",
      "SELECT * FROM CurrencyMaster WHERE CurrencyCode LIKE '%PHP%'",
      "SELECT * FROM Client WHERE AccountNo = @AccountNo",
      "SELECT * FROM ClientAccUser WHERE ClientId = @ClientId",
      "SELECT * FROM BeneficiaryMaster WHERE ClientId = @ClientId AND BeneficiaryRefName LIKE '%Krunal PHP%'",
      "SELECT * FROM Balances WHERE ClientId = @ClientId AND Currency = 'PHP'",
      "SELECT TOP 10 * FROM Payment ORDER BY PaymentId DESC"
    ],
    "update": ["EXEC USP_Payment_DatabaseManualEntry 140969, 100000.00, 106, '2025-07-15 00:00:00.000', 'Go-To Outsourcing INC', 'Go-To Outsourcing INC', 'pending', 210758, 132889, NULL"]
  },
  {
    "id": 5,
    "task": "Please update FW250924-WZOZQ-D ref number to 664846770 and new VD 29/07/2025",
    "select": [
      "DECLARE @ConversionCode VARCHAR(50) = 'FW140725-QVVZZ-A'",
      "SELECT ParentConversionId, MainParentId, Id,Status, * FROM Conversion WHERE ConversionCode = @ConversionCode",
      "SELECT ParentConversionId, MainParentId, Id,Status, * FROM Conversion WHERE ConversionCode = 'FW140725-QVVZZ'"
    ],
    "update": [
      "UPDATE Conversion SET ParentConversionId = 4435435, Settlement_date = '2025-07-29 00:00:00.000' WHERE Conversion_id = 28669"
    ]
  },
  {
    "id": 6,
    "task": "Please update Main Forward FW250924-WZOZQ ref number to 664846770",
    "select": [
      "DECLARE @ConversionCode VARCHAR(50) = 'FW250924-WZOZQ'",
      "SELECT ParentConversionId, MainParentId, Id, * FROM Conversion WHERE ConversionCode = @ConversionCode"
    ],
    "update": [
      "UPDATE Conversion SET Id = '4435435', MainParentId = '4435435', ParentConversionId = '4435435' WHERE Conversion_id = 28669"
    ]
  },
  {
    "id": 7,
    "task": "Get which SP is inserting or updating data in any field (e.g. SpreadPerc)",
    "select": [
      "SELECT OBJECT_NAME(object_id) AS ObjectName, definition FROM sys.sql_modules WHERE definition LIKE '%SpreadPerc%' AND (definition LIKE '%INSERT%' OR definition LIKE '%UPDATE%')"
    ],
    "update": []
  },
  {
    "id": 8,
    "task": "PR150725-OZURW - Check why this payment has failed",
    "select": [
      "DECLARE @PaymentCode VARCHAR(50) = 'PR150725-OZURW', @PaymentId BIGINT = 0",
      "SELECT @PaymentId = PaymentId, * FROM Payment WHERE PaymentCode = @PaymentCode",
      "SELECT Reason, CreatedDate FROM PaymentFailure WHERE PaymentId = @PaymentId"
    ],
    "update": []
  },
  {
    "id": 9,
    "task": "SP150725-PZPNS - Spread on this deal looks wrong (using inverse)",
    "select": [
      "DECLARE @ConversionCode VARCHAR(50) = 'SP150725-PZPNS'",
      "--LP rate and client rate should be nearby",
      "SELECT * FROM Conversion WHERE ConversionCode = @ConversionCode"
    ],
    "update": []
  },
  {
    "id": 10,
    "task": "Get PurposeCodes not found in PaymentPurposeCode",
    "select": [
      "SELECT DISTINCT PM.PurposeCode FROM Payment PM LEFT JOIN PaymentPurposeCode PPC ON PPC.Name = PM.PurposeCode WHERE PM.PurposeCode IS NOT NULL AND PPC.Name IS NULL"
    ],
    "update": []
  },
  {
  "id": 11,
  "task": "Get a list of Portus Pay customers and emails",
  "select": [
    "-- For get a list of Portus Pay customers and emails",
    "-- Time: 3 mins",
    "DECLARE @BrandId INT = 0;",
    "SELECT @BrandId = BrandId FROM Brand WHERE BrandName = 'Portus Pay';",
    "SELECT",
    "  B.BrandName,",
    "  C.ContactFirstName AS Firstname,",
    "  C.ContactMiddleName AS Middlename,",
    "  C.ContactLastName AS Lastname,",
    "  C.CompanyName,",
    "  CASE WHEN C.ClientTypeId = 1 THEN 'Personal' ELSE 'Business' END AS ClientType,",
    "  C.AccountNo,",
    "  C.Email,",
    "  ISNULL(E.EnumKey, 'Not Set') AS ComplianceStatus,",
    "  C.StatusReason AS UnderReviewReason,",
    "  CM.CountryName AS SuppCountry,",
    "  E1.EnumKey AS RiskCategory,",
    "  LU.Value AS Sector,",
    "  LU1.Value AS SubSector,",
    "  CASE WHEN C.IsActive = 1 THEN 'Yes' ELSE 'No' END AS IsActive,",
    "  CASE WHEN C.IsApproved = 1 THEN 'Yes' ELSE 'No' END AS IsApproved,",
    "  CASE WHEN C.IsDeleted = 1 THEN 'Yes' ELSE 'No' END AS IsDeleted,",
    "  CASE WHEN C.IsLocked = 1 THEN 'Yes' ELSE 'No' END AS IsLocked,",
    "  FORMAT(C.CreatedDate, 'dd-MMM-yy') AS CreatedDate",
    "FROM Client C",
    "LEFT JOIN BRAND B ON B.BrandId = C.BrandId",
    "LEFT JOIN ClientBussiness CB ON CB.ClientId = C.ClientId",
    "LEFT JOIN ClientAboutUs CA ON C.ClientTypeId = 1 AND CA.ClientId = C.ClientId",
    "LEFT JOIN CountryMaster CM ON (CM.CountryId = CB.CountrySupp AND C.ClientTypeId = 2) OR (CM.CountryId = CA.Country AND C.ClientTypeId = 1)",
    "LEFT JOIN LookUp LU ON LU.LookUpId = CB.Sector AND LU.Type = 'BusinessSector'",
    "LEFT JOIN LookUp LU1 ON LU1.LookUpId = CB.SubSector AND LU1.Type = 'BusinessSubsector'",
    "LEFT JOIN Enums E ON E.EnumValue = C.ComplianceStatus AND E.EnumType = 'CompilanceStatus'",
    "LEFT JOIN Enums E1 ON E1.EnumValue = C.RiskCategoryId AND E1.EnumType = 'RiskCategory'",
    "WHERE C.BrandId = @BrandId",
    "ORDER BY C.IsDeleted ASC;"
  ],
  "update": []
  },
  {
    "id": 12,
    "task": "For Update a Contact's Name",
    "select": [
      "DECLARE @AccountNo VARCHAR(30) = 'AU300424-TFZ';",
      "DECLARE @ClientId BIGINT = 0;",
      "SELECT @ClientId = ClientId FROM Client WHERE AccountNo = @AccountNo;",
      "SELECT * FROM ClientAccUser WHERE IsMainContact = 0 AND ClientId = @ClientId;",
      "SELECT * FROM UserMaster WHERE ClientId = @ClientId AND RoleId = 4;"
    ],
    "update": [
      "DECLARE @UserId BIGINT = 273394;",
      "DECLARE @FirstName NVARCHAR(100) = 'Vladimir';",
      "DECLARE @MiddleName NVARCHAR(100) = NULL;",
      "DECLARE @LastName NVARCHAR(100) = 'Arteyev';",
      "UPDATE ClientAccUser SET FirstName = @FirstName, MiddleName = @MiddleName, LastName = @LastName WHERE UserId = @UserId;",
      "UPDATE UserMaster SET FirstName = @FirstName, MiddleName = @MiddleName, LastNmae = @LastName WHERE UserId = @UserId;"
    ]
  },
  {
    "id": 13,
    "task": "Backup of any table",
    "select": [
      "SELECT * INTO NewBackupTable FROM OriginalTable"
    ],
    "update": []
  },
   {
    "id": 14,
    "task": "Beneficiary address change",
    "select": [
      "--For Get",
      "select BeneficiaryCCRefId,BeneficiaryType,* from BeneficiaryMaster where BeneficiaryCCRefId='b7d0d8c4-043e-46e3-8798-25911ff1ef4b'"
    ],
    "update": [
      "Update BeneficiaryMaster",
      "SET Beneficiary_address='7',Beneficiary_address1='Morsestrae',Beneficiary_city='Rheine',Beneficiary_postcode='48432' where BeneficiaryId=336106"
    ]
  },
  {
  "id": 15,
  "task": "Please update FW030425-ZZSZS-F sucden ref to 664962729 and swap sold to 7,588.05 and update swap pnl",
  "select": [
    "-- Review existing Conversion details before update",
    "SELECT * FROM Conversion WHERE ConversionCode = 'FW030425-ZZSZS-F';"
  ],
  "update": [
      "-- Declare all required variables",
      "DECLARE @ConversionCode VARCHAR(50) = 'FW030425-ZZSZS-F';",
      "DECLARE @ConversionId BIGINT;",
      "DECLARE @IFXTradeRefNo BIGINT = 664962729;",
      "DECLARE @NewSwapSellAmount DECIMAL(18, 2) = 7588.05;",
      "DECLARE @SwapProfitLoss DECIMAL(18, 2);",
      "DECLARE @FixedSide VARCHAR(10);",
      "DECLARE @LPSellAmount DECIMAL(18, 2);",
      "DECLARE @CoreBuyAmount DECIMAL(18, 2);",
      "DECLARE @SwapBuyAmount DECIMAL(18, 2);",

      "-- Fetch required values from Conversion",
      "SELECT ",
      "    @ConversionId = Conversion_id,",
      "    @FixedSide = Fixed_side,",
      "    @LPSellAmount = LPSellAmount,",
      "    @CoreBuyAmount = CoreBuyAmount,",
      "    @SwapBuyAmount = SwapBuyAmount",
      "FROM Conversion",
      "WHERE ConversionCode = @ConversionCode;",

      "-- Calculate SwapProfitLoss",
      "SET @SwapProfitLoss = ",
      "    CASE ",
      "        WHEN @FixedSide = 'buy' THEN @LPSellAmount - @NewSwapSellAmount",
      "        ELSE @SwapBuyAmount - @CoreBuyAmount",
      "    END;",

      "-- Update IFX ref and SwapSellAmount",
      "UPDATE Conversion",
      "SET IFX_Trade_ReferenceNo = @IFXTradeRefNo,",
      "    SwapSellAmount = @NewSwapSellAmount",
      "WHERE ConversionCode = @ConversionCode;",

      "-- Update SwapProfitLoss",
      "UPDATE Conversion",
      "SET SwapProfitLoss = @SwapProfitLoss",
      "WHERE Conversion_id = @ConversionId AND ConversionCode = @ConversionCode;"
    ]
  },
  {
    "id": 16,
    "task": "Get a list of all client with last trade",
    "select": [
      "--For get a clients with last trade date",
      "-- Time: 3 mins",
      "-- First get the latest conversion per client",
      "WITH LatestConversions AS (",
      "    SELECT ",
      "        ClientId, ",
      "        MAX(CreatedDate) AS LastTradedDate",
      "    FROM Conversion",
      "    GROUP BY ClientId",
      ")",
      "SELECT",
      "  B.BrandName,",
      "  C.AccountNo,",
      "  CASE WHEN C.ClientTypeId = 1 THEN 'Private' ELSE 'Corporate' END AS ClientType,",
      "  C.CompanyName,",
      "  C.ContactFirstName AS Firstname,",
      "  C.ContactMiddleName AS Middlename,",
      "  C.ContactLastName AS Lastname,",
      "  C.Email,",
      "  CAST(E.EnumKey AS VARCHAR) AS [AccountStatus],",       
      "  E2.EnumKey AS [Statusreason],",                     
      "  FORMAT(C.CreatedDate, 'dd-MMM-yy') AS [Date Opened],",
      "  CAST(E1.EnumKey AS VARCHAR) AS [Risk Score],",  
      "  C.StatusReason AS UnderReviewReason,",
      "  CASE WHEN C.IsActive = 1 THEN 'Yes' ELSE 'No' END AS IsActive,",
      "  CASE WHEN C.IsDeleted = 1 THEN 'Yes' ELSE 'No' END AS IsDeleted,",
      "  CASE WHEN C.IsLocked = 1 THEN 'Yes' ELSE 'No' END AS IsLocked,",
      "  FORMAT(L.LastTradedDate, 'dd-MMM-yy') AS [Date Last Traded],",
      "  CM1.CountryName AS UserCountry,",
      "  CM.CountryName AS BusinessCountry",
      "FROM Client C",
      "LEFT JOIN UserMaster UM ON UM.ClientId = C.ClientId",
      "LEFT JOIN LatestConversions L ON L.ClientId = C.ClientId",
      "LEFT JOIN BRAND B ON B.BrandId = C.BrandId",
      "LEFT JOIN ClientBussiness CB ON CB.ClientId = C.ClientId",
      "LEFT JOIN ClientAboutUs CA ON C.ClientTypeId = 1 AND CA.ClientId = C.ClientId",
      "LEFT JOIN CountryMaster CM ON (CM.CountryId = CB.CountrySupp AND C.ClientTypeId = 2) OR (CM.CountryId = CA.Country AND C.ClientTypeId = 1)",
      "LEFT JOIN CountryMaster CM1 ON CM1.CountryId = UM.Country",
      "LEFT JOIN Enums E ON E.EnumValue = C.ComplianceStatus AND E.EnumType = 'CompilanceStatus'",
      "LEFT JOIN Enums E1 ON E1.EnumValue = C.RiskCategoryId AND E1.EnumType = 'RiskCategory'",
      "LEFT JOIN Enums E2 ON E2.EnumValue = C.StatusReason AND E2.EnumType='StatusReason'",
      "ORDER BY C.CreatedDate ASC;"
    ],
    "update": []
  }
]
